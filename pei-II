algoritmo "Agendamento de Serviço"
// Declaração de variáveis
var
    tipoServico: caractere
    servicosMediosAgendados, servicosPesadosAgendados: inteiro
    temServicoMedioAgendado, temServicoPesadoAgendado: logico

inicio
    // Inicialização das variáveis
    servicosMediosAgendados := 0
    servicosPesadosAgendados := 0
    temServicoMedioAgendado := falso
    temServicoPesadoAgendado := falso

    // Início do processo de agendamento
    escreva("Lista de Serviços: Leve, Médio, Pesado")
    escreva("Escolha o Serviço: ")
    leia(tipoServico)
    
    // Verificar restrição baseada no tipo de serviço
    escolha tipoServico
        caso "Leve"
            escreva("Agendar Serviço Leve")
            escreva("Agendamento Concluído")
        
        caso "Médio"
            // Verificar se já existem dois serviços médios agendados
            escreva("Verificar serviços médios agendados")
            se (servicosMediosAgendados < 2) entao
                servicosMediosAgendados := servicosMediosAgendados + 1
                escreva("Agendar Serviço Médio")
                escreva("Agendamento Concluído")
            senao
                escreva("Data Indisponível para Serviço Médio")
            
        caso "Pesado"
            // Verificar se há serviço médio ou pesado agendado
            escreva("Verificar serviço pesado agendado")
            se (temServicoPesadoAgendado = falso) entao
                se (servicosMediosAgendados = 0) entao
                    escreva("Agendar Serviço Pesado")
                    escreva("Agendamento Concluído")
                    temServicoPesadoAgendado := verdadeiro
                senao
                    escreva("Data Indisponível")
            senao
                escreva("Data Indisponível")
        
        caso contrario
            escreva("Serviço não reconhecido")
    
    // Fim do processo
    escreva("Fim do Agendamento")
fimalgoritmo

